name: Checks

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string

jobs:
  Version-Check:
    name: Version (${{ inputs.working-directory }})
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Check Version(s)
        run: poetry run -- nox -s version:check

  build-matrix:
    name: Generate Build Matrix (${{ inputs.working-directory }})
    uses: ./.github/workflows/matrix-python.yml
    permissions:
      contents: read
    with:
      working-directory: ${{ inputs.working-directory }}

  Changelog:
    name: Changelog Update Check (${{ inputs.working-directory }})
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    if: ${{ github.ref != 'refs/heads/main' && github.ref != 'refs/heads/master' }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Run changelog update check
        run: poetry run -- nox -s changelog:updated

  Lint:
    name: Linting (${{ inputs.working-directory }}, Python-${{ matrix.python-version }})
    needs: [ Version-Check, build-matrix ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          python-version: ${{ matrix.python-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Run lint
        run: poetry run -- nox -s lint:code

      - name: Upload Artifacts
        uses: actions/upload-artifact@v5
        with:
          name: lint-${{ inputs.working-directory }}-python${{ matrix.python-version }}
          path: |
            ${{ inputs.working-directory }}/.lint.txt
            ${{ inputs.working-directory }}/.lint.json
          include-hidden-files: true

  Type-Check:
    name: Type Checking (${{ inputs.working-directory }}, Python-${{ matrix.python-version }})
    needs: [ Version-Check, build-matrix ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          python-version: ${{ matrix.python-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Run type-check
        run: poetry run -- nox -s lint:typing

  Security:
    name: Security Checks (${{ inputs.working-directory }}, Python-${{ matrix.python-version }})
    needs: [ Version-Check, build-matrix ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          python-version: ${{ matrix.python-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Run security linter
        run: poetry run -- nox -s lint:security

      - name: Upload Artifacts
        uses: actions/upload-artifact@v5
        with:
          name: security-${{ inputs.working-directory }}-python${{ matrix.python-version }}
          path: ${{ inputs.working-directory }}/.security.json
          include-hidden-files: true

  Format:
    name: Format Check (${{ inputs.working-directory }})
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Run format check
        run: poetry run -- nox -s project:format

  Build-Packages:
    name: Build Package Check  (${{ inputs.working-directory }})
    needs: [ Lint, Type-Check, Security, Format ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Run Distribution Check
        run: poetry run -- nox -s package:check

  Tests:
    name: Unit-Tests (${{ inputs.working-directory }}, Python-${{ matrix.python-version }})
    needs: [ Build-Packages, build-matrix ]
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.build-matrix.outputs.matrix) }}

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v5

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@v1
        with:
          python-version: ${{ matrix.python-version }}
          working-directory: ${{ inputs.working-directory }}

      - name: Run Tests and Collect Coverage
        working-directory: ${{ inputs.working-directory }}
        run: poetry run -- nox -s test:unit -- --coverage

      - name: Upload Artifacts
        uses: actions/upload-artifact@v5
        with:
          name: coverage-${{ inputs.working-directory }}-python${{ matrix.python-version }}-fast
          path: ${{ inputs.working-directory }}/.coverage
          include-hidden-files: true
